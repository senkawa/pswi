package cmd

import (
	"log"
	"os"

	"github.com/fatih/color"
	"github.com/senkawa/pswi/umi"
	"github.com/spf13/cobra"
)

var parseCmd = &cobra.Command{
	Use:   "parse [input file]",
	Args:  cobra.ExactArgs(1),
	Short: "Creates a list of reports based on a provided input file",
	Long: `Creates a list of filled in reports based on a provided input file. This input file should follow the template as generated by the template command.
`,
	Run: func(cmd *cobra.Command, args []string) {
		if err := runParse(args[0]); err != nil {
			log.Fatal(err)
		}
	},
}

type Report struct {
	Date         string
	ReportNumber string
	WeekNumber   string
	Background   string
	Task         string
	Result       string
	Feedback     string
}

func runParse(filename string) error {
	file, err := os.OpenFile(filename, os.O_RDONLY, 0o644)
	if err != nil {
		return err
	}

	templateData, err := os.ReadFile("template.docx")
	if err != nil {
		return err
	}

	reportProcessor, err := umi.NewReportProcessor(
		templateData,
		[]string{"IWSP", "Capstone"},
		file,
	)
	if err != nil {
		return err
	}

	reports, err := reportProcessor.Process()
	if err != nil {
		return err
	}

	for _, report := range reports {
		log.Printf("Generated report for %s", color.YellowString(report.Date))
	}

	return nil
}

func init() {
	rootCmd.AddCommand(parseCmd)
}
